{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/mat-video/fesm5/mat-video.js","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACsL;AAC1K;AACJ;AAC0C;AACrD;AACK;AACE;;AAEnD;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iCAAiC,mCAAmC,EAAE;AACtE;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gCAAgC,sDAAQ,uCAAuC,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,iCAAiC,iDAAiD,EAAE;AACpF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,oCAAoC,EAAE;AACxE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,sCAAsC,EAAE;AAC1E;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,sDAAsD,EAAE;AAC1F;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,+BAA+B,EAAE;AACnE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,kCAAkC,EAAE;AACtE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,iCAAiC,EAAE;AACrE;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mCAAmC,EAAE;AAC1D;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,qEAAqE,EAAE;AACvE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AA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AAuB;AAC7E,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA;AACA,CAAC,CAAC,kEAAS;AACX;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,yBAAyB,SAAS;AAClC,yBAAyB,WAAW;AACpC;AACA;;AAEA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,EAAE,yCAAyC;AACzG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU;AAC1B;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,gCAAgC,cAAc,qBAAqB;AACnE,iBAAiB;AACjB;AACA;AACA,6DAA6D,WAAW;AACxE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,4GAA4G,EAAE;AACxI;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+DAA+D;AAC/D,SAAS,0BAA0B;AACnC,SAAS;AACT,MAAM;AACN;AACA,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,2BAA2B,OAAO,0DAAY,2CAA2C;AACzF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,qCAAqC,EAAE,kBAAkB;AAC3F,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,sCAAsC,EAAE,kBAAkB;AAC5F,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,sCAAsC,EAAE,kBAAkB;AAC5F,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,sCAAsC,EAAE,kBAAkB;AAC5F,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,oCAAoC,EAAE;AACxE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,uDAAS,EAAE;AAC3B,SAAS;AACT,MAAM;AACN;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,uBAAuB,OAAO,oDAAM,EAAE;AACtC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,qBAAqB,OAAO,0DAAY,+CAA+C;AACvF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,6FAA6F,qBAAqB;AAClH,uCAAuC,qBAAqB,eAAe,kBAAkB,mBAAmB;AAChH,iBAAiB;AACjB;AACA;AACA,6DAA6D,WAAW;AACxE;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAY;AAClD;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,yDAAyD,EAAE,kBAAkB;AAC/G,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,mCAAmC,EAAE,kBAAkB;AACzF,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,yDAAyD,EAAE,kBAAkB;AAC/G,aAAa;AACb,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,kCAAkC,mCAAmC,EAAE;AACvE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,gCAAgC;AAC3D,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { CommonModule } from '@angular/common';\nimport { Injectable, Component, Renderer2, ViewChild, Input, Output, EventEmitter, Directive, Host, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, Optional, Attribute, Pipe, HostListener, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderModule } from '@angular/material/slider';\nimport { __values, __extends } from 'tslib';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar EventService = /** @class */ (function () {\n    function EventService() {\n    }\n    /**\n     * @param {?} renderer\n     * @param {?} events\n     * @return {?}\n     */\n    EventService.prototype.addEvents = /**\n     * @param {?} renderer\n     * @param {?} events\n     * @return {?}\n     */\n    function (renderer, events) {\n        var e_1, _a;\n        var _loop_1 = function (event_1) {\n            event_1.dispose = renderer.listen(event_1.element, event_1.name, (/**\n             * @param {?} newEvent\n             * @return {?}\n             */\n            function (newEvent) { return event_1.callback(newEvent); }));\n        };\n        try {\n            for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n                var event_1 = events_1_1.value;\n                _loop_1(event_1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /**\n     * @param {?} events\n     * @return {?}\n     */\n    EventService.prototype.removeEvents = /**\n     * @param {?} events\n     * @return {?}\n     */\n    function (events) {\n        var e_2, _a;\n        try {\n            for (var events_2 = __values(events), events_2_1 = events_2.next(); !events_2_1.done; events_2_1 = events_2.next()) {\n                var event_2 = events_2_1.value;\n                if (event_2.dispose) {\n                    event_2.dispose();\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (events_2_1 && !events_2_1.done && (_a = events_2.return)) _a.call(events_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    EventService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    EventService.ctorParameters = function () { return []; };\n    return EventService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVideoComponent = /** @class */ (function () {\n    function MatVideoComponent(renderer, evt) {\n        this.renderer = renderer;\n        this.evt = evt;\n        this.src = null;\n        this.title = null;\n        this.autoplay = false;\n        this.preload = true;\n        this.loop = false;\n        this.quality = true;\n        this.fullscreen = true;\n        this.showFrameByFrame = false;\n        this.fps = 29.97;\n        this.download = false;\n        this.color = \"primary\";\n        this.spinner = \"spin\";\n        this.poster = null;\n        this.keyboard = true;\n        this.overlay = null;\n        this.muted = false;\n        this.mutedChange = new EventEmitter();\n        this.timeChange = new EventEmitter();\n        this.playing = false;\n        this.isFullscreen = false;\n        this.videoLoaded = false;\n        this.isMouseMoving = false;\n        this.isMouseMovingTimeout = 2000;\n    }\n    Object.defineProperty(MatVideoComponent.prototype, \"time\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.getVideoTag().currentTime;\n        },\n        set: /**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            var _this = this;\n            /** @type {?} */\n            var video = this.getVideoTag();\n            if (video && val) {\n                if (val > video.duration) {\n                    val = video.duration;\n                }\n                if (val < 0) {\n                    val = 0;\n                }\n                if (val !== video.currentTime) {\n                    video.currentTime = val;\n                }\n                if (this.lastTime !== video.currentTime) {\n                    setTimeout((/**\n                     * @return {?}\n                     */\n                    function () { return _this.timeChange.emit(video.currentTime); }), 0);\n                    this.lastTime = video.currentTime;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatVideoComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.events = [\n            {\n                element: this.video.nativeElement,\n                name: \"loadstart\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoLoaded = false); }),\n                dispose: null\n            },\n            {\n                element: this.video.nativeElement,\n                name: \"loadedmetadata\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.evLoadedMetadata(event); }),\n                dispose: null\n            },\n            {\n                element: this.video.nativeElement,\n                name: \"error\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return console.error(\"Unhandled Video Error\", event); }),\n                dispose: null\n            },\n            {\n                element: this.video.nativeElement,\n                name: \"contextmenu\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return event.preventDefault(); }),\n                dispose: null\n            },\n            {\n                element: this.video.nativeElement,\n                name: \"timeupdate\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.evTimeUpdate(event); }),\n                dispose: null\n            },\n            {\n                element: this.player.nativeElement,\n                name: \"mousemove\",\n                callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.evMouseMove(event); }),\n                dispose: null\n            }\n        ];\n        this.video.nativeElement.onloadeddata = (/**\n         * @return {?}\n         */\n        function () { return (_this.videoLoaded = true); });\n        this.evt.addEvents(this.renderer, this.events);\n    };\n    /**\n     * @return {?}\n     */\n    MatVideoComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.video.nativeElement.onloadeddata = null;\n        this.evt.removeEvents(this.events);\n    };\n    /**\n     * @return {?}\n     */\n    MatVideoComponent.prototype.load = /**\n     * @return {?}\n     */\n    function () {\n        if (this.video && this.video.nativeElement) {\n            this.video.nativeElement.load();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatVideoComponent.prototype.getVideoTag = /**\n     * @return {?}\n     */\n    function () {\n        return this.video && this.video.nativeElement ? ((/** @type {?} */ (this.video.nativeElement))) : null;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatVideoComponent.prototype.evLoadedMetadata = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.videoWidth = this.video.nativeElement.videoWidth;\n        this.videoHeight = this.video.nativeElement.videoHeight;\n        this.videoLoaded = true;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatVideoComponent.prototype.evMouseMove = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        this.isMouseMoving = true;\n        clearTimeout(this.isMouseMovingTimer);\n        this.isMouseMovingTimer = setTimeout((/**\n         * @return {?}\n         */\n        function () {\n            _this.isMouseMoving = false;\n        }), this.isMouseMovingTimeout);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatVideoComponent.prototype.evTimeUpdate = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this.time = this.getVideoTag().currentTime;\n    };\n    /**\n     * @param {?} activeClass\n     * @param {?} inactiveClass\n     * @return {?}\n     */\n    MatVideoComponent.prototype.getOverlayClass = /**\n     * @param {?} activeClass\n     * @param {?} inactiveClass\n     * @return {?}\n     */\n    function (activeClass, inactiveClass) {\n        if (this.overlay === null) {\n            return !this.playing || this.isMouseMoving ? activeClass : inactiveClass;\n        }\n        else {\n            return this.overlay ? activeClass : inactiveClass;\n        }\n    };\n    MatVideoComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-video\",\n                    template: \"<div #player class=\\\"videoplayer\\\" [ngClass]=\\\"getOverlayClass('show-mouse', 'hide-mouse')\\\">\\n  <div class=\\\"header\\\" *ngIf=\\\"title\\\" [ngClass]=\\\"getOverlayClass('visible', 'hidden')\\\">\\n    {{ title }}\\n  </div>\\n\\n  <video\\n    #video\\n    class=\\\"video\\\"\\n    [attr.src]=\\\"src ? src : null\\\"\\n    [attr.autoplay]=\\\"autoplay ? true : null\\\"\\n    [preload]=\\\"preload ? 'auto' : 'metadata'\\\"\\n    [attr.poster]=\\\"poster ? poster : null\\\"\\n    [attr.loop]=\\\"loop ? loop : null\\\"\\n  >\\n    <ng-content select=\\\"source\\\"></ng-content>\\n    <ng-content select=\\\"track\\\"></ng-content>\\n    This browser does not support HTML5 video.\\n  </video>\\n\\n  <div class=\\\"controls\\\" *ngIf=\\\"videoLoaded\\\" [ngClass]=\\\"getOverlayClass('visible', 'hidden')\\\">\\n    <div class=\\\"progress\\\">\\n      <mat-seek-progress-control [color]=\\\"color\\\" [video]=\\\"video\\\"></mat-seek-progress-control>\\n    </div>\\n\\n    <div class=\\\"menu\\\">\\n      <div class=\\\"left\\\">\\n        <mat-play-button (playChanged)=\\\"playing = $event\\\" [video]=\\\"video\\\" [keyboard]=\\\"keyboard\\\"> </mat-play-button>\\n\\n        <mat-frame-by-frame-control *ngIf=\\\"showFrameByFrame\\\" [video]=\\\"video\\\" [fps]=\\\"fps\\\"></mat-frame-by-frame-control>\\n\\n        <mat-volume-control\\n          [muted]=\\\"muted\\\"\\n          (mutedChanged)=\\\"muted = $event; mutedChange.emit(muted)\\\"\\n          [color]=\\\"color\\\"\\n          [video]=\\\"video\\\"\\n          [keyboard]=\\\"keyboard\\\"\\n        >\\n        </mat-volume-control>\\n\\n        <mat-time-control [video]=\\\"video\\\"></mat-time-control>\\n      </div>\\n\\n      <div class=\\\"right\\\">\\n        <mat-quality-control *ngIf=\\\"quality\\\" [video]=\\\"video\\\"></mat-quality-control>\\n\\n        <mat-download-button *ngIf=\\\"download\\\" [title]=\\\"title\\\" [video]=\\\"video\\\"></mat-download-button>\\n\\n        <mat-fullscreen-button\\n          *ngIf=\\\"fullscreen\\\"\\n          (fullscreenChanged)=\\\"isFullscreen = $event\\\"\\n          [player]=\\\"player\\\"\\n          [keyboard]=\\\"keyboard\\\"\\n        ></mat-fullscreen-button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <mat-video-spinner [spinner]=\\\"spinner\\\" [video]=\\\"video\\\"></mat-video-spinner>\\n</div>\\n\",\n                    styles: [\".videoplayer{font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;background-color:#000;position:relative;width:100%;height:100%}.header{color:#fff;display:flex;justify-content:center;align-items:center;position:absolute;left:0;top:0;padding:14px 0;width:100%;z-index:1;background-image:linear-gradient(to top,rgba(0,0,0,0),rgba(0,0,0,.65))}.video{display:block;width:100%;height:100%;z-index:0}.controls{color:#fff;position:absolute;left:0;bottom:0;width:100%;z-index:1;background-image:linear-gradient(to bottom,rgba(0,0,0,0),rgba(0,0,0,.65))}.controls .progress{height:26px}.controls .menu{display:flex;align-items:center;flex-direction:row;justify-content:space-between;height:48px}.controls .menu .left{justify-content:flex-start}.controls .menu .right{justify-content:flex-end}.visible{visibility:visible;opacity:1;transition:opacity .5s linear}.hidden{visibility:hidden;opacity:0;transition:visibility .5s,opacity .5s linear}.show-mouse{cursor:default}.hide-mouse{cursor:none}\", \"@font-face{font-family:\\\"Material Icons\\\";font-style:normal;font-weight:400;src:url(https://fonts.gstatic.com/s/materialicons/v36/flUhRq6tzZclQEJ-Vdg-IuiaDsNc.woff2) format(\\\"woff2\\\")}::ng-deep.material-icons{font-family:\\\"Material Icons\\\";font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;font-feature-settings:\\\"liga\\\";-webkit-font-feature-settings:\\\"liga\\\";-webkit-font-smoothing:antialiased}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatVideoComponent.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: EventService }\n    ]; };\n    MatVideoComponent.propDecorators = {\n        player: [{ type: ViewChild, args: [\"player\", { static: false },] }],\n        video: [{ type: ViewChild, args: [\"video\", { static: false },] }],\n        src: [{ type: Input }],\n        title: [{ type: Input }],\n        autoplay: [{ type: Input }],\n        preload: [{ type: Input }],\n        loop: [{ type: Input }],\n        quality: [{ type: Input }],\n        fullscreen: [{ type: Input }],\n        showFrameByFrame: [{ type: Input }],\n        fps: [{ type: Input }],\n        download: [{ type: Input }],\n        color: [{ type: Input }],\n        spinner: [{ type: Input }],\n        poster: [{ type: Input }],\n        keyboard: [{ type: Input }],\n        overlay: [{ type: Input }],\n        muted: [{ type: Input }],\n        mutedChange: [{ type: Output }],\n        timeChange: [{ type: Output }],\n        time: [{ type: Input }]\n    };\n    return MatVideoComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVideoSourceDirective = /** @class */ (function () {\n    function MatVideoSourceDirective(matVideoComponent, el) {\n        this.matVideoComponent = matVideoComponent;\n        this.el = el;\n        this.src = null;\n        this.type = null;\n        this.init = true;\n        this.video = matVideoComponent;\n        this.source = el.nativeElement;\n        this.init = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatVideoSourceDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this.source.src = this.src;\n        this.source.type = this.type;\n        if (!this.init) {\n            this.video.load();\n        }\n    };\n    MatVideoSourceDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"[matVideoSource]\"\n                },] }\n    ];\n    /** @nocollapse */\n    MatVideoSourceDirective.ctorParameters = function () { return [\n        { type: MatVideoComponent, decorators: [{ type: Host }] },\n        { type: ElementRef }\n    ]; };\n    MatVideoSourceDirective.propDecorators = {\n        src: [{ type: Input }],\n        type: [{ type: Input }]\n    };\n    return MatVideoSourceDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVideoTrackDirective = /** @class */ (function () {\n    function MatVideoTrackDirective(matVideoComponent, el) {\n        this.matVideoComponent = matVideoComponent;\n        this.el = el;\n        this.src = null;\n        this.kind = null;\n        this.srclang = null;\n        this.label = null;\n        this.init = true;\n        this.video = matVideoComponent;\n        this.track = el.nativeElement;\n        this.init = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatVideoTrackDirective.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this.track.src = this.src;\n        this.track.kind = this.kind;\n        this.track.srclang = this.srclang;\n        this.track.label = this.label;\n        if (!this.init) {\n            this.video.load();\n        }\n    };\n    MatVideoTrackDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: \"[matVideoTrack]\"\n                },] }\n    ];\n    /** @nocollapse */\n    MatVideoTrackDirective.ctorParameters = function () { return [\n        { type: MatVideoComponent, decorators: [{ type: Host }] },\n        { type: ElementRef }\n    ]; };\n    MatVideoTrackDirective.propDecorators = {\n        src: [{ type: Input }],\n        kind: [{ type: Input }],\n        srclang: [{ type: Input }],\n        label: [{ type: Input }]\n    };\n    return MatVideoTrackDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nvar sliderprogressbarId = 0;\nvar MatSliderProgressBarComponent = /** @class */ (function (_super) {\n    __extends(MatSliderProgressBarComponent, _super);\n    function MatSliderProgressBarComponent(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex) {\n        var _this = _super.call(this, elementRef, focusMonitor, changeDetectorRef, dir, tabIndex) || this;\n        _this.mode = \"buffer\";\n        _this.value = 0;\n        _this.pBufferValue = 0;\n        /**\n         * The id of the progress bar.\n         */\n        _this.sliderprogressbarId = \"mat-slider-progress-bar-\" + sliderprogressbarId++;\n        _this.tabIndex = parseInt(tabIndex, 10) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatSliderProgressBarComponent.prototype, \"bufferValue\", {\n        /** Buffer value of the progress bar. Defaults to zero. */\n        get: /**\n         * Buffer value of the progress bar. Defaults to zero.\n         * @return {?}\n         */\n        function () {\n            return this.pBufferValue;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.pBufferValue = clamp(v || 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSliderProgressBarComponent.prototype, \"_trackBufferStyles\", {\n        /** CSS styles for the track fill element. */\n        get: /**\n         * CSS styles for the track fill element.\n         * @return {?}\n         */\n        function () {\n            if (this.mode === \"buffer\") {\n                /** @type {?} */\n                var axis = this.vertical ? \"Y\" : \"X\";\n                return {\n                    transform: \"translate\" + axis + \"(0px) scale\" + axis + \"(\" + this.pBufferValue / 100 + \")\"\n                };\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MatSliderProgressBarComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-slider-progress-bar\",\n                    template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <svg width=\\\"100%\\\" height=\\\"2\\\" focusable=\\\"false\\\" class=\\\"mat-slider-progress-background\\\">\\n      <defs>\\n        <pattern [id]=\\\"sliderprogressbarId\\\" x=\\\"2.5\\\" y=\\\"0\\\" width=\\\"5\\\" height=\\\"2.5\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n          <circle cx=\\\"1.25\\\" cy=\\\"1.25\\\" r=\\\"1.25\\\" />\\n        </pattern>\\n      </defs>\\n      <rect [attr.fill]=\\\"'url(#' + sliderprogressbarId + ')'\\\" width=\\\"100%\\\" height=\\\"100%\\\" />\\n    </svg>\\n    <div class=\\\"mat-slider-track-fill mat-slider-track-buffer\\\" [ngStyle]=\\\"_trackBufferStyles\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_trackFillStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_ticksContainerStyles\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_ticksStyles\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_thumbContainerStyles\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{ displayValue }}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                    providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                    host: {\n                        \"(focus)\": \"_onFocus()\",\n                        \"(blur)\": \"_onBlur()\",\n                        \"(click)\": 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null',\n                        // Angular 5/6 support\n                        \"(mousedown)\": 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null',\n                        // Angular 7 support\n                        \"(keydown)\": \"_onKeydown($event)\",\n                        \"(keyup)\": \"_onKeyup()\",\n                        \"(mouseenter)\": \"_onMouseenter()\",\n                        \"(slide)\": \"_onSlide($event)\",\n                        \"(slideend)\": \"_onSlideEnd()\",\n                        \"(slidestart)\": \"_onSlideStart($event)\",\n                        class: \"mat-slider\",\n                        role: \"slider\",\n                        \"[tabIndex]\": \"tabIndex\",\n                        \"[attr.aria-disabled]\": \"disabled\",\n                        \"[attr.aria-valuemax]\": \"max\",\n                        \"[attr.aria-valuemin]\": \"min\",\n                        \"[attr.aria-valuenow]\": \"value\",\n                        \"[attr.aria-orientation]\": 'vertical ? \"vertical\" : \"horizontal\"',\n                        \"[class.mat-slider-disabled]\": \"disabled\",\n                        \"[class.mat-slider-has-ticks]\": \"tickInterval\",\n                        \"[class.mat-slider-horizontal]\": \"!vertical\",\n                        \"[class.mat-slider-axis-inverted]\": \"_invertAxis\",\n                        \"[class.mat-slider-sliding]\": \"_isSliding\",\n                        \"[class.mat-slider-thumb-label-showing]\": \"thumbLabel\",\n                        \"[class.mat-slider-vertical]\": \"vertical\",\n                        \"[class.mat-slider-min-value]\": \"_isMinValue\",\n                        \"[class.mat-slider-hide-last-tick]\": \"disabled || _isMinValue && _thumbGap && _invertAxis\"\n                    },\n                    inputs: [\"disabled\", \"color\", \"tabIndex\"],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    styles: [\":host{width:100%}.mat-slider-progress-background{position:absolute;height:2px;width:100%;fill:#d3d3d3}.mat-slider-track-buffer{background-color:#d3d3d3!important}.mat-slider-thumb{border-color:transparent!important;visibility:hidden;opacity:0;transition:visibility .2s,opacity .2s linear}:host:hover .mat-slider-thumb{visibility:visible;opacity:1;transition:opacity .2s linear}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatSliderProgressBarComponent.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: FocusMonitor },\n        { type: ChangeDetectorRef },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: String, decorators: [{ type: Attribute, args: [\"tabindex\",] }] }\n    ]; };\n    MatSliderProgressBarComponent.propDecorators = {\n        mode: [{ type: Input }],\n        value: [{ type: Input }],\n        bufferValue: [{ type: Input }]\n    };\n    return MatSliderProgressBarComponent;\n}(MatSlider));\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar SecondsToTimePipe = /** @class */ (function () {\n    function SecondsToTimePipe() {\n        this.times = {\n            year: 31557600,\n            month: 2629746,\n            day: 86400,\n            hour: 3600\n        };\n    }\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    SecondsToTimePipe.prototype.transform = /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    function (seconds) {\n        if (!seconds) {\n            return \"0:00\";\n        }\n        else {\n            /** @type {?} */\n            var timeString = \"\";\n            for (var key in this.times) {\n                if (Math.floor(seconds / this.times[key]) > 0) {\n                    timeString += Math.floor(seconds / this.times[key]).toString() + \":\";\n                    seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n                }\n            }\n            timeString += Math.floor(seconds / 60).toString() + \":\";\n            seconds = seconds - 60 * Math.floor(seconds / 60);\n            if (Math.floor(seconds) < 10) {\n                timeString += \"0\";\n            }\n            timeString += Math.floor(seconds).toString();\n            return timeString;\n        }\n    };\n    SecondsToTimePipe.decorators = [\n        { type: Pipe, args: [{\n                    name: \"secondsToTime\"\n                },] }\n    ];\n    return SecondsToTimePipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar FullscreenService = /** @class */ (function () {\n    function FullscreenService() {\n        this.fnMap = [\n            // Object keys\n            [\"requestFullscreen\", \"exitFullscreen\", \"fullscreenElement\", \"fullscreenEnabled\", \"fullscreenchange\", \"fullscreenerror\"],\n            // New WebKit\n            [\n                \"webkitRequestFullscreen\",\n                \"webkitExitFullscreen\",\n                \"webkitFullscreenElement\",\n                \"webkitFullscreenEnabled\",\n                \"webkitfullscreenchange\",\n                \"webkitfullscreenerror\"\n            ],\n            // Old WebKit (Safari 5.1)\n            [\n                \"webkitRequestFullScreen\",\n                \"webkitCancelFullScreen\",\n                \"webkitCurrentFullScreenElement\",\n                \"webkitCancelFullScreen\",\n                \"webkitfullscreenchange\",\n                \"webkitfullscreenerror\"\n            ],\n            // Mozilla\n            [\n                \"mozRequestFullScreen\",\n                \"mozCancelFullScreen\",\n                \"mozFullScreenElement\",\n                \"mozFullScreenEnabled\",\n                \"mozfullscreenchange\",\n                \"mozfullscreenerror\"\n            ],\n            // MS\n            [\"msRequestFullscreen\", \"msExitFullscreen\", \"msFullscreenElement\", \"msFullscreenEnabled\", \"MSFullscreenChange\", \"MSFullscreenError\"]\n        ];\n        this.keyboardAllowed = typeof Element !== \"undefined\" && \"ALLOW_KEYBOARD_INPUT\" in Element;\n        /** @type {?} */\n        var ret = {};\n        /** @type {?} */\n        var val;\n        for (var i = 0; i < this.fnMap.length; i++) {\n            val = this.fnMap[i];\n            if (val && val[1] in document) {\n                for (i = 0; i < val.length; i++) {\n                    // Map everything to the first list of keys\n                    ret[this.fnMap[0][i].toString()] = val[i];\n                }\n                this.fn = ret;\n            }\n        }\n    }\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    FullscreenService.prototype.request = /**\n     * @param {?} elem\n     * @return {?}\n     */\n    function (elem) {\n        /** @type {?} */\n        var request = this.fn.requestFullscreen;\n        elem = elem || document.documentElement;\n        // Work around Safari 5.1 bug: reports support for\n        // keyboard in fullscreen even though it doesn't.\n        // Browser sniffing, since the alternative with\n        // setTimeout is even worse.\n        if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n            elem[request]();\n        }\n        else {\n            elem[request](this.keyboardAllowed ? ((/** @type {?} */ (Element))).ALLOW_KEYBOARD_INPUT : {});\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenService.prototype.exit = /**\n     * @return {?}\n     */\n    function () {\n        document[this.fn.exitFullscreen]();\n    };\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    FullscreenService.prototype.toggle = /**\n     * @param {?} elem\n     * @return {?}\n     */\n    function (elem) {\n        if (this.isFullscreen()) {\n            this.exit();\n        }\n        else {\n            this.request(elem);\n        }\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    FullscreenService.prototype.onChange = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        document.addEventListener(this.fn.fullscreenchange, callback, false);\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    FullscreenService.prototype.onError = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        document.addEventListener(this.fn.fullscreenerror, callback, false);\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenService.prototype.isFullscreen = /**\n     * @return {?}\n     */\n    function () {\n        return Boolean(document[this.fn.fullscreenElement]);\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenService.prototype.isEnabled = /**\n     * @return {?}\n     */\n    function () {\n        // Coerce to boolean in case of old WebKit\n        return Boolean(document[this.fn.fullscreenEnabled]);\n    };\n    /**\n     * @return {?}\n     */\n    FullscreenService.prototype.getElement = /**\n     * @return {?}\n     */\n    function () {\n        return document[this.fn.fullscreenElement];\n    };\n    FullscreenService.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    FullscreenService.ctorParameters = function () { return []; };\n    return FullscreenService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatDownloadButtonComponent = /** @class */ (function () {\n    function MatDownloadButtonComponent() {\n    }\n    MatDownloadButtonComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-download-button\",\n                    template: \"<a mat-icon-button [href]=\\\"video?.currentSrc\\\" [download]=\\\"title\\\">\\n  <mat-icon>file_download</mat-icon>\\n</a>\\n\",\n                    styles: [\"a{color:inherit;text-decoration:none}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatDownloadButtonComponent.ctorParameters = function () { return []; };\n    MatDownloadButtonComponent.propDecorators = {\n        video: [{ type: Input }],\n        title: [{ type: Input }]\n    };\n    return MatDownloadButtonComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatFrameByFrameControlComponent = /** @class */ (function () {\n    function MatFrameByFrameControlComponent() {\n        this.fps = 29.97;\n    }\n    /**\n     * @return {?}\n     */\n    MatFrameByFrameControlComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} nbFrames\n     * @return {?}\n     */\n    MatFrameByFrameControlComponent.prototype.seekFrames = /**\n     * @param {?} nbFrames\n     * @return {?}\n     */\n    function (nbFrames) {\n        if (!this.video.paused) {\n            this.video.pause();\n        }\n        /** @type {?} */\n        var currentFrames = this.video.currentTime * this.fps;\n        /** @type {?} */\n        var newPos = (currentFrames + nbFrames) / this.fps + 0.00001;\n        this.video.currentTime = newPos;\n    };\n    MatFrameByFrameControlComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-frame-by-frame-control\",\n                    template: \"<button mat-icon-button (click)=\\\"seekFrames(-5)\\\">\\n  <mat-icon>skip_previous</mat-icon>\\n</button>\\n\\n<button mat-icon-button (click)=\\\"seekFrames(-1)\\\">\\n  <mat-icon>arrow_left</mat-icon>\\n</button>\\n\\n<button mat-icon-button (click)=\\\"seekFrames(1)\\\">\\n  <mat-icon>arrow_right</mat-icon>\\n</button>\\n\\n<button mat-icon-button (click)=\\\"seekFrames(5)\\\">\\n  <mat-icon>skip_next</mat-icon>\\n</button>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatFrameByFrameControlComponent.ctorParameters = function () { return []; };\n    MatFrameByFrameControlComponent.propDecorators = {\n        video: [{ type: Input }],\n        fps: [{ type: Input }]\n    };\n    return MatFrameByFrameControlComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatFullscreenButtonComponent = /** @class */ (function () {\n    function MatFullscreenButtonComponent(fscreen, evt) {\n        this.fscreen = fscreen;\n        this.evt = evt;\n        this.canFullscreen = false;\n        this.fullscreen = false;\n        this.fullscreenChanged = new EventEmitter();\n        this.keyboard = true;\n    }\n    /**\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.fscreen.isEnabled()) {\n            this.canFullscreen = true;\n        }\n        this.fscreen.onChange((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) { return (_this.fscreen.isFullscreen() ? _this.onChangesFullscreen(true) : _this.onChangesFullscreen(false)); }));\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.setFullscreen = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.canFullscreen && this.fullscreen !== value) {\n            this.toggleFullscreen();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.toggleFullscreen = /**\n     * @return {?}\n     */\n    function () {\n        this.fullscreen = !this.fullscreen;\n        this.updateFullscreen();\n    };\n    /**\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.updateFullscreen = /**\n     * @return {?}\n     */\n    function () {\n        this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n        this.fullscreenChanged.emit(this.fullscreen);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.onChangesFullscreen = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.fullscreen = value;\n        this.fullscreenChanged.emit(this.fullscreen);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatFullscreenButtonComponent.prototype.onFullscreenKey = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.keyboard) {\n            this.toggleFullscreen();\n            event.preventDefault();\n        }\n    };\n    MatFullscreenButtonComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-fullscreen-button\",\n                    template: \"<button mat-icon-button [disabled]=\\\"!canFullscreen\\\" (click)=\\\"toggleFullscreen()\\\">\\n  <mat-icon *ngIf=\\\"!fullscreen\\\">fullscreen</mat-icon>\\n  <mat-icon *ngIf=\\\"fullscreen\\\">fullscreen_exit</mat-icon>\\n</button>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatFullscreenButtonComponent.ctorParameters = function () { return [\n        { type: FullscreenService },\n        { type: EventService }\n    ]; };\n    MatFullscreenButtonComponent.propDecorators = {\n        player: [{ type: Input }],\n        fullscreen: [{ type: Input }],\n        fullscreenChanged: [{ type: Output }],\n        keyboard: [{ type: Input }],\n        onFullscreenKey: [{ type: HostListener, args: [\"document:keyup.f\", [\"$event\"],] }]\n    };\n    return MatFullscreenButtonComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatPlayButtonComponent = /** @class */ (function () {\n    function MatPlayButtonComponent(renderer, evt) {\n        this.renderer = renderer;\n        this.evt = evt;\n        this.play = false;\n        this.playChanged = new EventEmitter();\n        this.keyboard = true;\n    }\n    /**\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.events = [\n            { element: this.video, name: \"play\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.setVideoPlayback(true); }), dispose: null },\n            { element: this.video, name: \"pause\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.setVideoPlayback(false); }), dispose: null },\n            { element: this.video, name: \"durationchange\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.setVideoPlayback(false); }), dispose: null },\n            { element: this.video, name: \"ended\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.setVideoPlayback(false); }), dispose: null },\n            { element: this.video, name: \"click\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.toggleVideoPlayback(); }), dispose: null }\n        ];\n        this.evt.addEvents(this.renderer, this.events);\n    };\n    /**\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.evt.removeEvents(this.events);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.setVideoPlayback = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.play !== value) {\n            this.toggleVideoPlayback();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.toggleVideoPlayback = /**\n     * @return {?}\n     */\n    function () {\n        this.play = !this.play;\n        this.updateVideoPlayback();\n    };\n    /**\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.updateVideoPlayback = /**\n     * @return {?}\n     */\n    function () {\n        this.play ? this.video.play() : this.video.pause();\n        this.playChanged.emit(this.play);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatPlayButtonComponent.prototype.onPlayKey = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.keyboard) {\n            this.toggleVideoPlayback();\n            event.preventDefault();\n        }\n    };\n    MatPlayButtonComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-play-button\",\n                    template: \"<button mat-icon-button (click)=\\\"toggleVideoPlayback()\\\">\\n  <mat-icon *ngIf=\\\"!play\\\">play_arrow</mat-icon>\\n  <mat-icon *ngIf=\\\"play\\\">pause</mat-icon>\\n</button>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatPlayButtonComponent.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: EventService }\n    ]; };\n    MatPlayButtonComponent.propDecorators = {\n        video: [{ type: Input }],\n        play: [{ type: Input }],\n        playChanged: [{ type: Output }],\n        keyboard: [{ type: Input }],\n        onPlayKey: [{ type: HostListener, args: [\"document:keyup.space\", [\"$event\"],] }]\n    };\n    return MatPlayButtonComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatQualityControlComponent = /** @class */ (function () {\n    function MatQualityControlComponent() {\n    }\n    MatQualityControlComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-quality-control\",\n                    template: \"<div *ngIf=\\\"video && video.videoHeight\\\" class=\\\"quality\\\">{{ video.videoHeight }}p</div>\\n\",\n                    styles: [\".quality{display:inline-block;font-size:12px;padding-left:12px;padding-right:12px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatQualityControlComponent.ctorParameters = function () { return []; };\n    MatQualityControlComponent.propDecorators = {\n        video: [{ type: Input }]\n    };\n    return MatQualityControlComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatSeekProgressControlComponent = /** @class */ (function () {\n    function MatSeekProgressControlComponent(renderer, evt) {\n        this.renderer = renderer;\n        this.evt = evt;\n        this.curTimePercent = 0;\n        this.bufTimePercent = 0;\n        this.video = null;\n        this.color = \"primary\";\n        this.currentTime = 0;\n        this.currentTimeChanged = new EventEmitter();\n        this.bufferedTime = 0;\n        this.bufferedTimeChanged = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.events = [\n            { element: this.video, name: \"seeking\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.updateCurrentTime(_this.video.currentTime); }), dispose: null },\n            { element: this.video, name: \"canplaythrough\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.updateBufferedTime(); }), dispose: null },\n            { element: this.video, name: \"timeupdate\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.updateCurrentTime(_this.video.currentTime); }), dispose: null },\n            { element: this.video, name: \"progress\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return _this.updateBufferedTime(); }), dispose: null }\n        ];\n        this.evt.addEvents(this.renderer, this.events);\n    };\n    /**\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.evt.removeEvents(this.events);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.seekVideo = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var percentage = value / 100;\n        /** @type {?} */\n        var newTime = this.video.duration * percentage;\n        this.video.currentTime = newTime;\n    };\n    /**\n     * @param {?} time\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.updateCurrentTime = /**\n     * @param {?} time\n     * @return {?}\n     */\n    function (time) {\n        this.currentTime = time;\n        this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n    };\n    /**\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.updateBufferedTime = /**\n     * @return {?}\n     */\n    function () {\n        if (this.video.buffered.length > 0) {\n            /** @type {?} */\n            var largestBufferValue = 0;\n            for (var i = 0; i < this.video.buffered.length; i++) {\n                /** @type {?} */\n                var cur = this.video.currentTime;\n                /** @type {?} */\n                var start = this.video.buffered.start(i);\n                /** @type {?} */\n                var end = this.video.buffered.end(i);\n                if (start <= cur && end > cur && end - start > largestBufferValue) {\n                    largestBufferValue = end;\n                }\n            }\n            this.bufferedTime = largestBufferValue;\n            this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n        }\n    };\n    /**\n     * @param {?} emitter\n     * @param {?} time\n     * @return {?}\n     */\n    MatSeekProgressControlComponent.prototype.updateTime = /**\n     * @param {?} emitter\n     * @param {?} time\n     * @return {?}\n     */\n    function (emitter, time) {\n        emitter.emit(time);\n        return (time / this.video.duration) * 100;\n    };\n    MatSeekProgressControlComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-seek-progress-control\",\n                    template: \"<mat-slider-progress-bar\\n  [color]=\\\"color\\\"\\n  mode=\\\"buffer\\\"\\n  step=\\\"0.01\\\"\\n  [value]=\\\"curTimePercent\\\"\\n  [bufferValue]=\\\"bufTimePercent\\\"\\n  (input)=\\\"seekVideo($event.value)\\\"\\n></mat-slider-progress-bar>\\n\",\n                    styles: [\"\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatSeekProgressControlComponent.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: EventService }\n    ]; };\n    MatSeekProgressControlComponent.propDecorators = {\n        video: [{ type: Input }],\n        color: [{ type: Input }],\n        currentTime: [{ type: Input }],\n        currentTimeChanged: [{ type: Output }],\n        bufferedTime: [{ type: Input }],\n        bufferedTimeChanged: [{ type: Output }]\n    };\n    return MatSeekProgressControlComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatTimeControlComponent = /** @class */ (function () {\n    function MatTimeControlComponent() {\n    }\n    MatTimeControlComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-time-control\",\n                    template: \"<div class=\\\"playtime\\\">{{ video?.currentTime | secondsToTime }} / {{ video?.duration | secondsToTime }}</div>\\n\",\n                    styles: [\".playtime{display:inline;font-size:12px}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatTimeControlComponent.ctorParameters = function () { return []; };\n    MatTimeControlComponent.propDecorators = {\n        video: [{ type: Input }]\n    };\n    return MatTimeControlComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVideoSpinnerComponent = /** @class */ (function () {\n    function MatVideoSpinnerComponent(renderer, evt) {\n        this.renderer = renderer;\n        this.evt = evt;\n        this.spinner = \"spin\";\n        this.videoBuffering = false;\n        this.videoLoaded = false;\n        this.events = [];\n    }\n    /**\n     * @return {?}\n     */\n    MatVideoSpinnerComponent.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.events = [\n            { element: this.video, name: \"loadstart\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoLoaded = false); }), dispose: null },\n            { element: this.video, name: \"loadedmetadata\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoLoaded = true); }), dispose: null },\n            { element: this.video, name: \"canplay\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoBuffering = false); }), dispose: null },\n            { element: this.video, name: \"waiting\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoBuffering = true); }), dispose: null },\n            { element: this.video, name: \"durationchange\", callback: (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                function (event) { return (_this.videoBuffering = true); }), dispose: null }\n        ];\n        this.video.onloadeddata = (/**\n         * @return {?}\n         */\n        function () { return (_this.videoLoaded = true); });\n        this.evt.addEvents(this.renderer, this.events);\n    };\n    /**\n     * @return {?}\n     */\n    MatVideoSpinnerComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.video.onloadeddata = null;\n        this.evt.removeEvents(this.events);\n    };\n    MatVideoSpinnerComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-video-spinner\",\n                    template: \"<div *ngIf=\\\"!videoLoaded || videoBuffering\\\" [class]=\\\"spinner\\\"></div>\\n\",\n                    styles: [\":host{position:absolute;left:calc(50% - 32px);top:calc(50% - 32px);z-index:1}\", \".spin{box-sizing:border-box;width:64px;height:64px;border-radius:100%;border:10px solid rgba(255,255,255,.2);border-top-color:#fff;-webkit-animation:1s linear infinite spin;animation:1s linear infinite spin}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\", \".dot{width:64px;height:64px;background-color:#fff;border-radius:100%;-webkit-animation:1s ease-in-out infinite dot;animation:1s ease-in-out infinite dot}@-webkit-keyframes dot{0%{-webkit-transform:scale(0)}100%{-webkit-transform:scale(1);opacity:0}}@keyframes dot{0%{transform:scale(0)}100%{transform:scale(1);opacity:0}}\", \".split-ring{display:inline-block;width:64px;height:64px}.split-ring:after{content:\\\" \\\";display:block;width:46px;height:46px;margin:1px;border-radius:50%;border:5px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s linear infinite split-ring;animation:1.2s linear infinite split-ring}@-webkit-keyframes split-ring{0%{-webkit-transform:rotate(0)}100%{-webkit-transform:rotate(360deg)}}@keyframes split-ring{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}\", \".hourglass{display:inline-block;position:relative;width:64px;height:64px}.hourglass:after{content:\\\" \\\";display:block;border-radius:50%;width:0;height:0;margin:6px;box-sizing:border-box;border:26px solid #fff;border-color:#fff transparent;-webkit-animation:1.2s infinite hourglass;animation:1.2s infinite hourglass}@-webkit-keyframes hourglass{0%{-webkit-transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{-webkit-transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{-webkit-transform:rotate(720deg)}}@keyframes hourglass{0%{transform:rotate(0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}50%{transform:rotate(360deg);-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}100%{transform:rotate(720deg)}}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatVideoSpinnerComponent.ctorParameters = function () { return [\n        { type: Renderer2 },\n        { type: EventService }\n    ]; };\n    MatVideoSpinnerComponent.propDecorators = {\n        video: [{ type: Input }],\n        spinner: [{ type: Input }]\n    };\n    return MatVideoSpinnerComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVolumeControlComponent = /** @class */ (function () {\n    function MatVolumeControlComponent(evt) {\n        this.evt = evt;\n        this.video = null;\n        this.color = \"primary\";\n        this.volume = 1;\n        this.volumeChanged = new EventEmitter();\n        this.pMuted = false;\n        this.mutedChanged = new EventEmitter();\n        this.keyboard = true;\n    }\n    Object.defineProperty(MatVolumeControlComponent.prototype, \"muted\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.pMuted;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.pMuted = v;\n            this.video.muted = this.pMuted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatVolumeControlComponent.prototype.setVolume = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.volume = value;\n        this.video.volume = this.volume;\n        this.volumeChanged.emit(this.volume);\n        if (this.volume > 0) {\n            this.setMuted(false);\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatVolumeControlComponent.prototype.setMuted = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.muted !== value) {\n            this.toggleMuted();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatVolumeControlComponent.prototype.toggleMuted = /**\n     * @return {?}\n     */\n    function () {\n        this.muted = !this.muted;\n        this.updateMuted();\n    };\n    /**\n     * @return {?}\n     */\n    MatVolumeControlComponent.prototype.updateMuted = /**\n     * @return {?}\n     */\n    function () {\n        this.video.muted = this.muted;\n        this.mutedChanged.emit(this.muted);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatVolumeControlComponent.prototype.onMuteKey = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.keyboard) {\n            this.toggleMuted();\n            event.preventDefault();\n        }\n    };\n    MatVolumeControlComponent.decorators = [\n        { type: Component, args: [{\n                    selector: \"mat-volume-control\",\n                    template: \"<div class=\\\"volume-control\\\">\\n  <button mat-icon-button (click)=\\\"toggleMuted()\\\">\\n    <mat-icon *ngIf=\\\"muted || volume === 0\\\">volume_off</mat-icon>\\n    <mat-icon *ngIf=\\\"!muted && volume > 0 && volume < 0.25\\\">volume_mute</mat-icon>\\n    <mat-icon *ngIf=\\\"!muted && volume >= 0.25 && volume < 0.5\\\">volume_down</mat-icon>\\n    <mat-icon *ngIf=\\\"!muted && volume >= 0.5\\\">volume_up</mat-icon>\\n  </button>\\n  <mat-slider class=\\\"volume-slider\\\" [color]=\\\"color\\\" min=\\\"0\\\" max=\\\"1\\\" step=\\\"0.01\\\" value=\\\"1\\\" (input)=\\\"setVolume($event.value)\\\"> </mat-slider>\\n</div>\\n\",\n                    styles: [\".volume-control{display:inline}.volume-slider{margin-left:-15px}::ng-deep.mat-slider-thumb{border-color:transparent!important}::ng-deep.mat-slider-track-background{background-color:#d3d3d3!important;transform:translateX(0)!important}.volume-control .volume-slider{visibility:hidden;opacity:0;min-width:0;width:0;transition:visibility .2s,opacity .2s linear,width .2s linear}.volume-control:hover .volume-slider{visibility:visible;opacity:1;min-width:90px;width:90px;transition:opacity .2s linear,width .2s linear,min-width .2s linear}\"]\n                }] }\n    ];\n    /** @nocollapse */\n    MatVolumeControlComponent.ctorParameters = function () { return [\n        { type: EventService }\n    ]; };\n    MatVolumeControlComponent.propDecorators = {\n        video: [{ type: Input }],\n        color: [{ type: Input }],\n        volume: [{ type: Input }],\n        volumeChanged: [{ type: Output }],\n        muted: [{ type: Input }],\n        mutedChanged: [{ type: Output }],\n        keyboard: [{ type: Input }],\n        onMuteKey: [{ type: HostListener, args: [\"document:keyup.m\", [\"$event\"],] }]\n    };\n    return MatVolumeControlComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatVideoModule = /** @class */ (function () {\n    function MatVideoModule() {\n    }\n    MatVideoModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [\n                        SecondsToTimePipe,\n                        MatVideoComponent,\n                        MatSliderProgressBarComponent,\n                        MatPlayButtonComponent,\n                        MatVolumeControlComponent,\n                        MatDownloadButtonComponent,\n                        MatFullscreenButtonComponent,\n                        MatTimeControlComponent,\n                        MatQualityControlComponent,\n                        MatVideoSpinnerComponent,\n                        MatSeekProgressControlComponent,\n                        MatVideoSourceDirective,\n                        MatVideoTrackDirective,\n                        MatFrameByFrameControlComponent\n                    ],\n                    imports: [CommonModule, MatIconModule, MatButtonModule, MatSliderModule],\n                    exports: [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective],\n                    providers: [FullscreenService, EventService]\n                },] }\n    ];\n    return MatVideoModule;\n}());\n\nexport { MatVideoModule, SecondsToTimePipe as ɵa, MatVideoComponent as ɵb, EventService as ɵc, MatSliderProgressBarComponent as ɵd, MatPlayButtonComponent as ɵe, MatVolumeControlComponent as ɵf, MatDownloadButtonComponent as ɵg, MatFullscreenButtonComponent as ɵh, FullscreenService as ɵi, MatTimeControlComponent as ɵj, MatQualityControlComponent as ɵk, MatVideoSpinnerComponent as ɵl, MatSeekProgressControlComponent as ɵm, MatVideoSourceDirective as ɵn, MatVideoTrackDirective as ɵo, MatFrameByFrameControlComponent as ɵp };\n//# sourceMappingURL=mat-video.js.map\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #sidenav mode=\\\"side\\\" class=\\\"sidenav\\\">\\n    <mat-toolbar color=\\\"primary\\\">\\n      <span class=\\\"title\\\">\\n        Settings\\n      </span>\\n    </mat-toolbar>\\n    <div class=\\\"content options\\\">\\n      <mat-form-field class=\\\"item-margin\\\" [color]=\\\"color\\\">\\n        <input matInput type=\\\"url\\\" [(ngModel)]=\\\"src\\\" placeholder=\\\"Source\\\" />\\n        <mat-hint align=\\\"end\\\"\\n          >Download button will only work for\\n          <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy\\\" target=\\\"_blank\\\">\\n            same-origin URLs\\n          </a>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"item-margin\\\" [color]=\\\"color\\\">\\n        <input matInput type=\\\"url\\\" [(ngModel)]=\\\"poster\\\" placeholder=\\\"Poster\\\" />\\n      </mat-form-field>\\n      <mat-form-field class=\\\"item-margin\\\" [color]=\\\"color\\\">\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"title\\\" placeholder=\\\"Title\\\" />\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"item-margin\\\" [color]=\\\"color\\\">\\n        <input matInput type=\\\"text\\\" [(ngModel)]=\\\"currentTime\\\" placeholder=\\\"Current Time\\\" />\\n      </mat-form-field>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Autoplay:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"autoplay\\\" (change)=\\\"vid.load()\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Preload:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"preload\\\" (change)=\\\"vid.load()\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Loop:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"loop\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Muted:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"muted\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Quality:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"quality\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Download:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"download\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Fullscreen:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"fullscreen\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Frame-by-Frame:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"showFrameByFrame\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Keyboard:</div>\\n        <mat-slide-toggle [(ngModel)]=\\\"keyboard\\\" [color]=\\\"color\\\"></mat-slide-toggle>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Overlay:</div>\\n        <mat-radio-group [(ngModel)]=\\\"overlay\\\">\\n          <mat-radio-button class=\\\"item-margin\\\" [value]=\\\"null\\\" [color]=\\\"color\\\">\\n            Default\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" [value]=\\\"false\\\" [color]=\\\"color\\\">\\n            Off\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" [value]=\\\"true\\\" [color]=\\\"color\\\">\\n            On\\n          </mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Color:</div>\\n        <mat-radio-group [(ngModel)]=\\\"color\\\">\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"primary\\\" [color]=\\\"color\\\">\\n            Primary\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"accent\\\" [color]=\\\"color\\\">\\n            Accent\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"warn\\\" [color]=\\\"color\\\">\\n            Warn\\n          </mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">Spinner:</div>\\n        <mat-radio-group [(ngModel)]=\\\"spinner\\\">\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"spin\\\" [color]=\\\"color\\\">\\n            Spin\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"dot\\\" [color]=\\\"color\\\">\\n            Dot\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"split-ring\\\" [color]=\\\"color\\\">\\n            Split Ring\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"hourglass\\\" [color]=\\\"color\\\">\\n            Hourglass\\n          </mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n\\n      <div class=\\\"item-section\\\">\\n        <div class=\\\"item-margin\\\">CSS Examples:</div>\\n        <mat-radio-group [(ngModel)]=\\\"ngclass\\\">\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"mat-video-responsive\\\" [color]=\\\"color\\\">\\n            Responsive\\n          </mat-radio-button>\\n          <mat-radio-button class=\\\"item-margin\\\" value=\\\"mat-video-fixed\\\" [color]=\\\"color\\\">\\n            Fixed\\n          </mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"mat-toolbar mat-primary mat-toolbar-single-row footer\\\">\\n      <div class=\\\"badges\\\">\\n        <a href=\\\"https://badge.fury.io/js/mat-video\\\" target=\\\"_blank\\\">\\n          <img alt=\\\"npm version\\\" src=\\\"https://badge.fury.io/js/mat-video.svg\\\" />\\n        </a>\\n        <a href=\\\"https://travis-ci.org/nkoehler/mat-video\\\" target=\\\"_blank\\\">\\n          <img alt=\\\"Build Status\\\" src=\\\"https://travis-ci.org/nkoehler/mat-video.svg?branch=master\\\" />\\n        </a>\\n        <a href=\\\"https://codeclimate.com/github/nkoehler/mat-video/\\\" target=\\\"_blank\\\">\\n          <img alt=\\\"Maintainability\\\" src=\\\"https://api.codeclimate.com/v1/badges/46fb1a751d60d0f8b316/maintainability\\\" />\\n        </a>\\n      </div>\\n    </div>\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" matTooltip=\\\"Settings\\\">\\n        <mat-icon>settings</mat-icon>\\n      </button>\\n\\n      <span class=\\\"title\\\"> <span class=\\\"name\\\">mat-video</span> for Angular {{ version }} </span>\\n\\n      <a mat-icon-button href=\\\"https://github.com/nkoehler/mat-video\\\" class=\\\"github\\\" matTooltip=\\\"GitHub\\\">\\n        <svg height=\\\"32\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" width=\\\"32\\\">\\n          <path\\n            fill-rule=\\\"evenodd\\\"\\n            d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\\\"\\n          ></path>\\n        </svg>\\n      </a>\\n    </mat-toolbar>\\n\\n    <div class=\\\"content video\\\">\\n      <mat-video\\n        #vid\\n        [ngClass]=\\\"ngclass\\\"\\n        [src]=\\\"src\\\"\\n        [title]=\\\"title\\\"\\n        [autoplay]=\\\"autoplay\\\"\\n        [preload]=\\\"preload\\\"\\n        [loop]=\\\"loop\\\"\\n        [fullscreen]=\\\"fullscreen\\\"\\n        [download]=\\\"download\\\"\\n        [quality]=\\\"quality\\\"\\n        [keyboard]=\\\"keyboard\\\"\\n        [color]=\\\"color\\\"\\n        [spinner]=\\\"spinner\\\"\\n        [poster]=\\\"poster\\\"\\n        [overlay]=\\\"overlay\\\"\\n        [(muted)]=\\\"muted\\\"\\n        [showFrameByFrame]=\\\"showFrameByFrame\\\"\\n        [(time)]=\\\"currentTime\\\"\\n      >\\n      </mat-video>\\n    </div>\\n\\n    <div class=\\\"mat-toolbar mat-primary mat-toolbar-single-row footer\\\">\\n      <div class=\\\"version\\\">Version {{ appversion }}</div>\\n      <div class=\\\"copyright\\\">\\n        Nicholas Koehler\\n        <mat-icon class=\\\"icon\\\">copyright</mat-icon> 2019\\n      </div>\\n      <div class=\\\"license\\\">\\n        MIT License\\n      </div>\\n    </div>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \"div {\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n}\\n\\n.content {\\n  margin: 8px;\\n}\\n\\n.video {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.mat-video-responsive {\\n  width: 50%;\\n}\\n\\n.mat-video-fixed {\\n  width: 600px;\\n}\\n\\n.sidenav-container {\\n  height: 100vh;\\n}\\n\\n.sidenav {\\n  width: 500px;\\n}\\n\\n.github {\\n  fill: white;\\n}\\n\\n.title {\\n  font-weight: bold;\\n  margin: auto;\\n}\\n\\n.title .name {\\n  font-style: italic;\\n}\\n\\n.options {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.footer {\\n  position: absolute;\\n  bottom: 0;\\n  width: 100%;\\n  height: 48px;\\n  font-size: 12px;\\n  z-index: 2;\\n}\\n\\n.footer .badges {\\n  width: 100%;\\n  display: flex;\\n  justify-content: space-evenly;\\n  padding-top: 12px;\\n}\\n\\n.footer .icon {\\n  width: 12px;\\n  height: 12px;\\n  font-size: 12px;\\n  line-height: 12px;\\n}\\n\\n.footer .version {\\n  text-align: left;\\n}\\n\\n.footer .copyright {\\n  text-align: center;\\n  margin: auto;\\n}\\n\\n.footer .license {\\n  text-align: right;\\n}\\n\\n.mat-drawer-container {\\n  background-color: white;\\n}\\n\\n.mat-drawer-side {\\n  border-right: none;\\n}\\n\\n.item-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 40px;\\n}\\n\\n.item-margin {\\n  margin: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9ua29laGxlci9tYXQtdmlkZW8vc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlEQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUE7RUFDRSxVQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBQTtFQUNBLFVBQUE7QUNDRjs7QURFQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsNkJBQUE7RUFDQSxpQkFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLFlBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0Y7O0FERUE7RUFDRSx1QkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxxQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsY0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2IHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogOHB4O1xufVxuXG4udmlkZW8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm1hdC12aWRlby1yZXNwb25zaXZlIHtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLm1hdC12aWRlby1maXhlZCB7XG4gIHdpZHRoOiA2MDBweDtcbn1cblxuLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogNTAwcHg7XG59XG5cbi5naXRodWIge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnRpdGxlIC5uYW1lIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4ub3B0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5mb290ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDhweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB6LWluZGV4OiAyO1xufVxuXG4uZm9vdGVyIC5iYWRnZXMge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIHBhZGRpbmctdG9wOiAxMnB4O1xufVxuXG4uZm9vdGVyIC5pY29uIHtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMTJweDtcbn1cblxuLmZvb3RlciAudmVyc2lvbiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5mb290ZXIgLmNvcHlyaWdodCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uZm9vdGVyIC5saWNlbnNlIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5tYXQtZHJhd2VyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LWRyYXdlci1zaWRlIHtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xufVxuXG4uaXRlbS1zZWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDQwcHg7XG59XG5cbi5pdGVtLW1hcmdpbiB7XG4gIG1hcmdpbjogMCAxMHB4O1xufVxuIiwiZGl2IHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xufVxuXG4uY29udGVudCB7XG4gIG1hcmdpbjogOHB4O1xufVxuXG4udmlkZW8ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm1hdC12aWRlby1yZXNwb25zaXZlIHtcbiAgd2lkdGg6IDUwJTtcbn1cblxuLm1hdC12aWRlby1maXhlZCB7XG4gIHdpZHRoOiA2MDBweDtcbn1cblxuLnNpZGVuYXYtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLnNpZGVuYXYge1xuICB3aWR0aDogNTAwcHg7XG59XG5cbi5naXRodWIge1xuICBmaWxsOiB3aGl0ZTtcbn1cblxuLnRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnRpdGxlIC5uYW1lIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4ub3B0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5mb290ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNDhweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB6LWluZGV4OiAyO1xufVxuXG4uZm9vdGVyIC5iYWRnZXMge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gIHBhZGRpbmctdG9wOiAxMnB4O1xufVxuXG4uZm9vdGVyIC5pY29uIHtcbiAgd2lkdGg6IDEycHg7XG4gIGhlaWdodDogMTJweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBsaW5lLWhlaWdodDogMTJweDtcbn1cblxuLmZvb3RlciAudmVyc2lvbiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5mb290ZXIgLmNvcHlyaWdodCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiBhdXRvO1xufVxuXG4uZm9vdGVyIC5saWNlbnNlIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5tYXQtZHJhd2VyLWNvbnRhaW5lciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4ubWF0LWRyYXdlci1zaWRlIHtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xufVxuXG4uaXRlbS1zZWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDQwcHg7XG59XG5cbi5pdGVtLW1hcmdpbiB7XG4gIG1hcmdpbjogMCAxMHB4O1xufSJdfQ== */\"","import { Component, VERSION } from \"@angular/core\";\nimport buildInfo from \"./../../package.json\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  version = VERSION.full;\n  appversion: string = buildInfo.version;\n\n  ngclass = \"mat-video-responsive\";\n\n  src = \"assets/NASA.mp4\";\n  title = \"NASA Rocket Launch\";\n  width = 600;\n  height = 337.5;\n  currentTime = 0;\n  autoplay = false;\n  preload = true;\n  loop = false;\n  quality = true;\n  download = true;\n  fullscreen = true;\n  showFrameByFrame = false;\n  keyboard = true;\n  color = \"primary\";\n  spinner = \"spin\";\n  poster = \"assets/NASA.jpg\";\n  overlay = null;\n  muted = false;\n}\n","import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { AppComponent } from \"./app.component\";\nimport { MatVideoModule } from \"mat-video\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    MatRadioModule,\n    MatVideoModule\n  ],\n  exports: [MatVideoModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\nimport \"hammerjs\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}