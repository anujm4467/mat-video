{"version":3,"file":"mat-video.js","sources":["ng://mat-video/lib/services/event.service.ts","ng://mat-video/lib/video.component.ts","ng://mat-video/lib/directives/mat-video-source.directive.ts","ng://mat-video/lib/directives/mat-video-track.directive.ts","ng://mat-video/lib/internal/mat-slider-progress-bar/mat-slider-progress-bar.component.ts","ng://mat-video/lib/pipes/seconds-to-time.pipe.ts","ng://mat-video/lib/services/fullscreen.service.ts","ng://mat-video/lib/ui/mat-download-button/mat-download-button.component.ts","ng://mat-video/lib/ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component.ts","ng://mat-video/lib/ui/mat-fullscreen-button/mat-fullscreen-button.component.ts","ng://mat-video/lib/ui/mat-play-button/mat-play-button.component.ts","ng://mat-video/lib/ui/mat-quality-control/mat-quality-control.component.ts","ng://mat-video/lib/ui/mat-seek-progress-control/mat-seek-progress-control.component.ts","ng://mat-video/lib/ui/mat-time-control/mat-time-control.component.ts","ng://mat-video/lib/ui/mat-video-spinner/mat-video-spinner.component.ts","ng://mat-video/lib/ui/mat-volume-control/mat-volume-control.component.ts","ng://mat-video/lib/video.module.ts"],"sourcesContent":["import { Injectable, Renderer2 } from \"@angular/core\";\nimport { EventHandler } from \"../interfaces/event-handler.interface\";\n\n@Injectable()\nexport class EventService {\n  constructor() {}\n\n  addEvents(renderer: Renderer2, events: EventHandler[]): void {\n    for (const event of events) {\n      event.dispose = renderer.listen(event.element, event.name, newEvent => event.callback(newEvent));\n    }\n  }\n\n  removeEvents(events: EventHandler[]): void {\n    for (const event of events) {\n      if (event.dispose) {\n        event.dispose();\n      }\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, Output, Renderer2, ViewChild } from \"@angular/core\";\nimport { ThemePalette } from \"@angular/material/core\";\n\nimport { EventHandler } from \"./interfaces/event-handler.interface\";\nimport { EventService } from \"./services/event.service\";\n\n@Component({\n  selector: \"mat-video\",\n  templateUrl: \"./video.component.html\",\n  styleUrls: [\"./video.component.scss\", \"./styles/icons.scss\"]\n})\nexport class MatVideoComponent implements AfterViewInit, OnDestroy {\n  @ViewChild(\"player\", { static: false }) private player: ElementRef;\n  @ViewChild(\"video\", { static: false }) private video: ElementRef;\n\n  @Input() src: string = null;\n  @Input() title: string = null;\n  @Input() autoplay = false;\n  @Input() preload = true;\n  @Input() loop = false;\n  @Input() quality = true;\n  @Input() fullscreen = true;\n  @Input() showFrameByFrame = false;\n  @Input() fps = 29.97;\n  @Input() download = false;\n  @Input() color: ThemePalette = \"primary\";\n  @Input() spinner = \"spin\";\n  @Input() poster: string = null;\n  @Input() keyboard = true;\n  @Input() overlay: boolean = null;\n  @Input() muted = false;\n  @Output() mutedChange = new EventEmitter<boolean>();\n\n  @Output() timeChange = new EventEmitter<number>();\n\n  @Input()\n  get time() {\n    return this.getVideoTag().currentTime;\n  }\n\n  set time(val: number) {\n    const video: HTMLVideoElement = this.getVideoTag();\n    if (video && val) {\n      if (val > video.duration) {\n        val = video.duration;\n      }\n      if (val < 0) {\n        val = 0;\n      }\n      if (val !== video.currentTime) {\n        video.currentTime = val;\n      }\n      if (this.lastTime !== video.currentTime) {\n        setTimeout(() => this.timeChange.emit(video.currentTime), 0);\n        this.lastTime = video.currentTime;\n      }\n    }\n  }\n\n  playing = false;\n\n  isFullscreen = false;\n\n  videoWidth: number;\n  videoHeight: number;\n  lastTime: number;\n\n  videoLoaded = false;\n\n  private isMouseMoving = false;\n  private isMouseMovingTimer: NodeJS.Timer;\n  private isMouseMovingTimeout = 2000;\n\n  private events: EventHandler[];\n\n  constructor(private renderer: Renderer2, private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.events = [\n      {\n        element: this.video.nativeElement,\n        name: \"loadstart\",\n        callback: event => (this.videoLoaded = false),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"loadedmetadata\",\n        callback: event => this.evLoadedMetadata(event),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"error\",\n        callback: event => console.error(\"Unhandled Video Error\", event),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"contextmenu\",\n        callback: event => event.preventDefault(),\n        dispose: null\n      },\n      {\n        element: this.video.nativeElement,\n        name: \"timeupdate\",\n        callback: event => this.evTimeUpdate(event),\n        dispose: null\n      },\n      {\n        element: this.player.nativeElement,\n        name: \"mousemove\",\n        callback: event => this.evMouseMove(event),\n        dispose: null\n      }\n    ];\n\n    this.video.nativeElement.onloadeddata = () => (this.videoLoaded = true);\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.nativeElement.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n\n  load(): void {\n    if (this.video && this.video.nativeElement) {\n      this.video.nativeElement.load();\n    }\n  }\n\n  getVideoTag(): HTMLVideoElement | null {\n    return this.video && this.video.nativeElement ? (this.video.nativeElement as HTMLVideoElement) : null;\n  }\n\n  evLoadedMetadata(event: any): void {\n    this.videoWidth = this.video.nativeElement.videoWidth;\n    this.videoHeight = this.video.nativeElement.videoHeight;\n    this.videoLoaded = true;\n  }\n\n  evMouseMove(event: any): void {\n    this.isMouseMoving = true;\n    clearTimeout(this.isMouseMovingTimer);\n    this.isMouseMovingTimer = setTimeout(() => {\n      this.isMouseMoving = false;\n    }, this.isMouseMovingTimeout);\n  }\n\n  evTimeUpdate(event: any): void {\n    this.time = this.getVideoTag().currentTime;\n  }\n\n  getOverlayClass(activeClass: string, inactiveClass: string): any {\n    if (this.overlay === null) {\n      return !this.playing || this.isMouseMoving ? activeClass : inactiveClass;\n    } else {\n      return this.overlay ? activeClass : inactiveClass;\n    }\n  }\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { MatVideoComponent } from \"../video.component\";\n\n@Directive({\n  selector: \"[matVideoSource]\"\n})\nexport class MatVideoSourceDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() type: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private source: HTMLSourceElement;\n\n  constructor(@Host() private matVideoComponent: MatVideoComponent, private el: ElementRef) {\n    this.video = matVideoComponent;\n    this.source = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.source.src = this.src;\n    this.source.type = this.type;\n\n    if (!this.init) {\n      this.video.load();\n    }\n  }\n}\n","import { Directive, ElementRef, Host, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { MatVideoComponent } from \"../video.component\";\n\n@Directive({\n  selector: \"[matVideoTrack]\"\n})\nexport class MatVideoTrackDirective implements OnChanges {\n  @Input() src: string = null;\n  @Input() kind: string = null;\n  @Input() srclang: string = null;\n  @Input() label: string = null;\n\n  private init = true;\n  private video: MatVideoComponent;\n  private track: HTMLTrackElement;\n\n  constructor(@Host() private matVideoComponent: MatVideoComponent, private el: ElementRef) {\n    this.video = matVideoComponent;\n    this.track = el.nativeElement;\n    this.init = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.track.src = this.src;\n    this.track.kind = this.kind;\n    this.track.srclang = this.srclang;\n    this.track.label = this.label;\n\n    if (!this.init) {\n      this.video.load();\n    }\n  }\n}\n","import { Component, Input, ElementRef, ChangeDetectorRef, ChangeDetectionStrategy, Optional, Attribute } from \"@angular/core\";\nimport { MatSlider, MAT_SLIDER_VALUE_ACCESSOR } from \"@angular/material/slider\";\nimport { FocusMonitor } from \"@angular/cdk/a11y\";\nimport { Directionality } from \"@angular/cdk/bidi\";\n\n/** Counter used to generate unique IDs for progress bars. */\nlet sliderprogressbarId = 0;\n\n@Component({\n  selector: \"mat-slider-progress-bar\",\n  templateUrl: \"./mat-slider-progress-bar.component.html\",\n  styleUrls: [\"./mat-slider-progress-bar.component.scss\"],\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    \"(focus)\": \"_onFocus()\",\n    \"(blur)\": \"_onBlur()\",\n    \"(click)\": 'this[\"_onClick\"] ? this[\"_onClick\"]($event) : null', // Angular 5/6 support\n    \"(mousedown)\": 'this[\"_onMousedown\"] ? this[\"_onMousedown\"]($event) : null', // Angular 7 support\n    \"(keydown)\": \"_onKeydown($event)\",\n    \"(keyup)\": \"_onKeyup()\",\n    \"(mouseenter)\": \"_onMouseenter()\",\n    \"(slide)\": \"_onSlide($event)\",\n    \"(slideend)\": \"_onSlideEnd()\",\n    \"(slidestart)\": \"_onSlideStart($event)\",\n    class: \"mat-slider\",\n    role: \"slider\",\n    \"[tabIndex]\": \"tabIndex\",\n    \"[attr.aria-disabled]\": \"disabled\",\n    \"[attr.aria-valuemax]\": \"max\",\n    \"[attr.aria-valuemin]\": \"min\",\n    \"[attr.aria-valuenow]\": \"value\",\n    \"[attr.aria-orientation]\": 'vertical ? \"vertical\" : \"horizontal\"',\n    \"[class.mat-slider-disabled]\": \"disabled\",\n    \"[class.mat-slider-has-ticks]\": \"tickInterval\",\n    \"[class.mat-slider-horizontal]\": \"!vertical\",\n    \"[class.mat-slider-axis-inverted]\": \"_invertAxis\",\n    \"[class.mat-slider-sliding]\": \"_isSliding\",\n    \"[class.mat-slider-thumb-label-showing]\": \"thumbLabel\",\n    \"[class.mat-slider-vertical]\": \"vertical\",\n    \"[class.mat-slider-min-value]\": \"_isMinValue\",\n    \"[class.mat-slider-hide-last-tick]\": \"disabled || _isMinValue && _thumbGap && _invertAxis\"\n  },\n  inputs: [\"disabled\", \"color\", \"tabIndex\"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatSliderProgressBarComponent extends MatSlider {\n  @Input() mode = \"buffer\";\n  @Input() value = 0;\n  /** Buffer value of the progress bar. Defaults to zero. */\n  @Input()\n  get bufferValue(): number {\n    return this.pBufferValue;\n  }\n  set bufferValue(v: number) {\n    this.pBufferValue = clamp(v || 0);\n  }\n  private pBufferValue = 0;\n\n  /** The id of the progress bar. */\n  sliderprogressbarId = `mat-slider-progress-bar-${sliderprogressbarId++}`;\n\n  constructor(\n    elementRef: ElementRef,\n    focusMonitor: FocusMonitor,\n    changeDetectorRef: ChangeDetectorRef,\n    @Optional() dir: Directionality,\n    @Attribute(\"tabindex\") tabIndex: string\n  ) {\n    super(elementRef, focusMonitor, changeDetectorRef, dir, tabIndex);\n    this.tabIndex = parseInt(tabIndex, 10) || 0;\n  }\n\n  /** CSS styles for the track fill element. */\n  get _trackBufferStyles(): { [key: string]: string } {\n    if (this.mode === \"buffer\") {\n      const axis = this.vertical ? \"Y\" : \"X\";\n      return {\n        transform: `translate${axis}(0px) scale${axis}(${this.pBufferValue / 100})`\n      };\n    }\n  }\n}\n\n/** Clamps a value to be between two numbers, by default 0 and 100. */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"secondsToTime\"\n})\nexport class SecondsToTimePipe implements PipeTransform {\n  times = {\n    year: 31557600,\n    month: 2629746,\n    day: 86400,\n    hour: 3600\n  };\n\n  transform(seconds: number) {\n    if (!seconds) {\n      return \"0:00\";\n    } else {\n      let timeString = \"\";\n      for (const key in this.times) {\n        if (Math.floor(seconds / this.times[key]) > 0) {\n          timeString += Math.floor(seconds / this.times[key]).toString() + \":\";\n          seconds = seconds - this.times[key] * Math.floor(seconds / this.times[key]);\n        }\n      }\n      timeString += Math.floor(seconds / 60).toString() + \":\";\n      seconds = seconds - 60 * Math.floor(seconds / 60);\n      if (Math.floor(seconds) < 10) {\n        timeString += \"0\";\n      }\n      timeString += Math.floor(seconds).toString();\n      return timeString;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { FullscreenControls } from \"../interfaces/fullscreen-controls.interface\";\n\n@Injectable()\nexport class FullscreenService {\n  private fnMap: string[][] = [\n    // Object keys\n    [\"requestFullscreen\", \"exitFullscreen\", \"fullscreenElement\", \"fullscreenEnabled\", \"fullscreenchange\", \"fullscreenerror\"],\n    // New WebKit\n    [\n      \"webkitRequestFullscreen\",\n      \"webkitExitFullscreen\",\n      \"webkitFullscreenElement\",\n      \"webkitFullscreenEnabled\",\n      \"webkitfullscreenchange\",\n      \"webkitfullscreenerror\"\n    ],\n    // Old WebKit (Safari 5.1)\n    [\n      \"webkitRequestFullScreen\",\n      \"webkitCancelFullScreen\",\n      \"webkitCurrentFullScreenElement\",\n      \"webkitCancelFullScreen\",\n      \"webkitfullscreenchange\",\n      \"webkitfullscreenerror\"\n    ],\n    // Mozilla\n    [\n      \"mozRequestFullScreen\",\n      \"mozCancelFullScreen\",\n      \"mozFullScreenElement\",\n      \"mozFullScreenEnabled\",\n      \"mozfullscreenchange\",\n      \"mozfullscreenerror\"\n    ],\n    // MS\n    [\"msRequestFullscreen\", \"msExitFullscreen\", \"msFullscreenElement\", \"msFullscreenEnabled\", \"MSFullscreenChange\", \"MSFullscreenError\"]\n  ];\n\n  private fn: FullscreenControls;\n  private keyboardAllowed: boolean;\n\n  constructor() {\n    this.keyboardAllowed = typeof Element !== \"undefined\" && \"ALLOW_KEYBOARD_INPUT\" in Element;\n    const ret: any = {};\n    let val;\n\n    for (let i = 0; i < this.fnMap.length; i++) {\n      val = this.fnMap[i];\n      if (val && val[1] in document) {\n        for (i = 0; i < val.length; i++) {\n          // Map everything to the first list of keys\n          ret[this.fnMap[0][i].toString()] = val[i];\n        }\n        this.fn = ret;\n      }\n    }\n  }\n\n  public request(elem: any) {\n    const request = this.fn.requestFullscreen;\n\n    elem = elem || document.documentElement;\n\n    // Work around Safari 5.1 bug: reports support for\n    // keyboard in fullscreen even though it doesn't.\n    // Browser sniffing, since the alternative with\n    // setTimeout is even worse.\n    if (/5\\.1[.\\d]* Safari/.test(navigator.userAgent)) {\n      elem[request]();\n    } else {\n      elem[request](this.keyboardAllowed ? (Element as any).ALLOW_KEYBOARD_INPUT : {});\n    }\n  }\n\n  public exit() {\n    document[this.fn.exitFullscreen]();\n  }\n\n  public toggle(elem: any) {\n    if (this.isFullscreen()) {\n      this.exit();\n    } else {\n      this.request(elem);\n    }\n  }\n\n  public onChange(callback: any) {\n    document.addEventListener(this.fn.fullscreenchange, callback, false);\n  }\n\n  public onError(callback: any) {\n    document.addEventListener(this.fn.fullscreenerror, callback, false);\n  }\n\n  public isFullscreen() {\n    return Boolean(document[this.fn.fullscreenElement]);\n  }\n\n  public isEnabled() {\n    // Coerce to boolean in case of old WebKit\n    return Boolean(document[this.fn.fullscreenEnabled]);\n  }\n\n  public getElement() {\n    return document[this.fn.fullscreenElement];\n  }\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"mat-download-button\",\n  templateUrl: \"./mat-download-button.component.html\",\n  styleUrls: [\"./mat-download-button.component.scss\"]\n})\nexport class MatDownloadButtonComponent {\n  @Input() video: HTMLVideoElement;\n  @Input() title: string;\n\n  constructor() {}\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"mat-frame-by-frame-control\",\n  templateUrl: \"./mat-frame-by-frame-control.component.html\",\n  styleUrls: [\"./mat-frame-by-frame-control.component.scss\"]\n})\nexport class MatFrameByFrameControlComponent implements OnInit {\n  @Input() video: HTMLVideoElement;\n  @Input() fps = 29.97;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  seekFrames(nbFrames: number) {\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n\n    const currentFrames = this.video.currentTime * this.fps;\n    const newPos = (currentFrames + nbFrames) / this.fps + 0.00001;\n    this.video.currentTime = newPos;\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, OnInit, Output } from \"@angular/core\";\n\nimport { EventService } from \"../../services/event.service\";\nimport { FullscreenService } from \"../../services/fullscreen.service\";\n\n@Component({\n  selector: \"mat-fullscreen-button\",\n  templateUrl: \"./mat-fullscreen-button.component.html\",\n  styleUrls: [\"./mat-fullscreen-button.component.scss\"]\n})\nexport class MatFullscreenButtonComponent implements OnInit {\n  canFullscreen = false;\n\n  @Input() player: HTMLVideoElement;\n\n  @Input() fullscreen = false;\n\n  @Output() fullscreenChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard = true;\n\n  constructor(private fscreen: FullscreenService, private evt: EventService) {}\n\n  ngOnInit(): void {\n    if (this.fscreen.isEnabled()) {\n      this.canFullscreen = true;\n    }\n\n    this.fscreen.onChange(event => (this.fscreen.isFullscreen() ? this.onChangesFullscreen(true) : this.onChangesFullscreen(false)));\n  }\n\n  setFullscreen(value: boolean) {\n    if (this.canFullscreen && this.fullscreen !== value) {\n      this.toggleFullscreen();\n    }\n  }\n\n  toggleFullscreen(): void {\n    this.fullscreen = !this.fullscreen;\n    this.updateFullscreen();\n  }\n\n  updateFullscreen(): void {\n    this.fullscreen ? this.fscreen.request(this.player) : this.fscreen.exit();\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  onChangesFullscreen(value: boolean): void {\n    this.fullscreen = value;\n    this.fullscreenChanged.emit(this.fullscreen);\n  }\n\n  @HostListener(\"document:keyup.f\", [\"$event\"])\n  onFullscreenKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleFullscreen();\n      event.preventDefault();\n    }\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, HostListener, Input, OnDestroy, Output, Renderer2 } from \"@angular/core\";\n\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"mat-play-button\",\n  templateUrl: \"./mat-play-button.component.html\",\n  styleUrls: [\"./mat-play-button.component.scss\"]\n})\nexport class MatPlayButtonComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n\n  @Input() play = false;\n\n  @Output() playChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard = true;\n\n  private events: EventHandler[];\n\n  constructor(private renderer: Renderer2, private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: \"play\", callback: event => this.setVideoPlayback(true), dispose: null },\n      { element: this.video, name: \"pause\", callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: \"durationchange\", callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: \"ended\", callback: event => this.setVideoPlayback(false), dispose: null },\n      { element: this.video, name: \"click\", callback: event => this.toggleVideoPlayback(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  setVideoPlayback(value: boolean) {\n    if (this.play !== value) {\n      this.toggleVideoPlayback();\n    }\n  }\n\n  toggleVideoPlayback(): void {\n    this.play = !this.play;\n    this.updateVideoPlayback();\n  }\n\n  updateVideoPlayback(): void {\n    this.play ? this.video.play() : this.video.pause();\n    this.playChanged.emit(this.play);\n  }\n\n  @HostListener(\"document:keyup.space\", [\"$event\"])\n  onPlayKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleVideoPlayback();\n      event.preventDefault();\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"mat-quality-control\",\n  templateUrl: \"./mat-quality-control.component.html\",\n  styleUrls: [\"./mat-quality-control.component.scss\"]\n})\nexport class MatQualityControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() {}\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnDestroy, Output, Renderer2 } from \"@angular/core\";\nimport { ThemePalette } from \"@angular/material/core\";\n\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"mat-seek-progress-control\",\n  templateUrl: \"./mat-seek-progress-control.component.html\",\n  styleUrls: [\"./mat-seek-progress-control.component.scss\"]\n})\nexport class MatSeekProgressControlComponent implements AfterViewInit, OnDestroy {\n  curTimePercent = 0;\n  bufTimePercent = 0;\n\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = \"primary\";\n\n  @Input() currentTime = 0;\n\n  @Output() currentTimeChanged = new EventEmitter<number>();\n\n  @Input() bufferedTime = 0;\n\n  @Output() bufferedTimeChanged = new EventEmitter<number>();\n\n  private events: EventHandler[];\n\n  constructor(private renderer: Renderer2, private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: \"seeking\", callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: \"canplaythrough\", callback: event => this.updateBufferedTime(), dispose: null },\n      { element: this.video, name: \"timeupdate\", callback: event => this.updateCurrentTime(this.video.currentTime), dispose: null },\n      { element: this.video, name: \"progress\", callback: event => this.updateBufferedTime(), dispose: null }\n    ];\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.evt.removeEvents(this.events);\n  }\n\n  seekVideo(value: number): void {\n    const percentage = value / 100;\n    const newTime = this.video.duration * percentage;\n    this.video.currentTime = newTime;\n  }\n\n  updateCurrentTime(time: number): void {\n    this.currentTime = time;\n    this.curTimePercent = this.updateTime(this.currentTimeChanged, this.currentTime);\n  }\n\n  updateBufferedTime(): void {\n    if (this.video.buffered.length > 0) {\n      let largestBufferValue = 0;\n      for (let i = 0; i < this.video.buffered.length; i++) {\n        const cur = this.video.currentTime;\n        const start = this.video.buffered.start(i);\n        const end = this.video.buffered.end(i);\n        if (start <= cur && end > cur && end - start > largestBufferValue) {\n          largestBufferValue = end;\n        }\n      }\n      this.bufferedTime = largestBufferValue;\n      this.bufTimePercent = this.updateTime(this.bufferedTimeChanged, this.bufferedTime);\n    }\n  }\n\n  updateTime(emitter: EventEmitter<number>, time: number): number {\n    emitter.emit(time);\n    return (time / this.video.duration) * 100;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"mat-time-control\",\n  templateUrl: \"./mat-time-control.component.html\",\n  styleUrls: [\"./mat-time-control.component.scss\"]\n})\nexport class MatTimeControlComponent {\n  @Input() video: HTMLVideoElement;\n\n  constructor() {}\n}\n","import { AfterViewInit, Component, Input, OnDestroy, Renderer2 } from \"@angular/core\";\n\nimport { EventHandler } from \"../../interfaces/event-handler.interface\";\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"mat-video-spinner\",\n  templateUrl: \"./mat-video-spinner.component.html\",\n  styleUrls: [\n    \"./mat-video-spinner.component.scss\",\n    \"./indicators/spin.scss\",\n    \"./indicators/dot.scss\",\n    \"./indicators/split-ring.scss\",\n    \"./indicators/hourglass.scss\"\n  ]\n})\nexport class MatVideoSpinnerComponent implements AfterViewInit, OnDestroy {\n  @Input() video: HTMLVideoElement;\n  @Input() spinner = \"spin\";\n\n  videoBuffering = false;\n  videoLoaded = false;\n\n  private events: EventHandler[] = [];\n\n  constructor(private renderer: Renderer2, private evt: EventService) {}\n\n  ngAfterViewInit(): void {\n    this.events = [\n      { element: this.video, name: \"loadstart\", callback: event => (this.videoLoaded = false), dispose: null },\n      { element: this.video, name: \"loadedmetadata\", callback: event => (this.videoLoaded = true), dispose: null },\n      { element: this.video, name: \"canplay\", callback: event => (this.videoBuffering = false), dispose: null },\n      { element: this.video, name: \"waiting\", callback: event => (this.videoBuffering = true), dispose: null },\n      { element: this.video, name: \"durationchange\", callback: event => (this.videoBuffering = true), dispose: null }\n    ];\n\n    this.video.onloadeddata = () => (this.videoLoaded = true);\n\n    this.evt.addEvents(this.renderer, this.events);\n  }\n\n  ngOnDestroy(): void {\n    this.video.onloadeddata = null;\n\n    this.evt.removeEvents(this.events);\n  }\n}\n","import { Component, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\nimport { ThemePalette } from \"@angular/material/core\";\n\nimport { EventService } from \"../../services/event.service\";\n\n@Component({\n  selector: \"mat-volume-control\",\n  templateUrl: \"./mat-volume-control.component.html\",\n  styleUrls: [\"./mat-volume-control.component.scss\"]\n})\nexport class MatVolumeControlComponent {\n  @Input() video: HTMLVideoElement = null;\n\n  @Input() color: ThemePalette = \"primary\";\n\n  @Input() volume = 1;\n\n  @Output() volumeChanged = new EventEmitter<number>();\n\n  private pMuted = false;\n  @Input()\n  get muted() {\n    return this.pMuted;\n  }\n  set muted(v: boolean) {\n    this.pMuted = v;\n    this.video.muted = this.pMuted;\n  }\n\n  @Output() mutedChanged = new EventEmitter<boolean>();\n\n  @Input() keyboard = true;\n\n  constructor(private evt: EventService) {}\n\n  setVolume(value: number): void {\n    this.volume = value;\n    this.video.volume = this.volume;\n    this.volumeChanged.emit(this.volume);\n\n    if (this.volume > 0) {\n      this.setMuted(false);\n    }\n  }\n\n  setMuted(value: boolean): void {\n    if (this.muted !== value) {\n      this.toggleMuted();\n    }\n  }\n\n  toggleMuted(): void {\n    this.muted = !this.muted;\n    this.updateMuted();\n  }\n\n  updateMuted(): void {\n    this.video.muted = this.muted;\n    this.mutedChanged.emit(this.muted);\n  }\n\n  @HostListener(\"document:keyup.m\", [\"$event\"])\n  onMuteKey(event: KeyboardEvent) {\n    if (this.keyboard) {\n      this.toggleMuted();\n      event.preventDefault();\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSliderModule } from \"@angular/material/slider\";\n\nimport { MatVideoSourceDirective } from \"./directives/mat-video-source.directive\";\nimport { MatVideoTrackDirective } from \"./directives/mat-video-track.directive\";\nimport { MatSliderProgressBarComponent } from \"./internal/mat-slider-progress-bar/mat-slider-progress-bar.component\";\nimport { SecondsToTimePipe } from \"./pipes/seconds-to-time.pipe\";\nimport { EventService } from \"./services/event.service\";\nimport { FullscreenService } from \"./services/fullscreen.service\";\nimport { MatDownloadButtonComponent } from \"./ui/mat-download-button/mat-download-button.component\";\nimport { MatFrameByFrameControlComponent } from \"./ui/mat-frame-by-frame-control/mat-frame-by-frame-control.component\";\nimport { MatFullscreenButtonComponent } from \"./ui/mat-fullscreen-button/mat-fullscreen-button.component\";\nimport { MatPlayButtonComponent } from \"./ui/mat-play-button/mat-play-button.component\";\nimport { MatQualityControlComponent } from \"./ui/mat-quality-control/mat-quality-control.component\";\nimport { MatSeekProgressControlComponent } from \"./ui/mat-seek-progress-control/mat-seek-progress-control.component\";\nimport { MatTimeControlComponent } from \"./ui/mat-time-control/mat-time-control.component\";\nimport { MatVideoSpinnerComponent } from \"./ui/mat-video-spinner/mat-video-spinner.component\";\nimport { MatVolumeControlComponent } from \"./ui/mat-volume-control/mat-volume-control.component\";\nimport { MatVideoComponent } from \"./video.component\";\n\n@NgModule({\n  declarations: [\n    SecondsToTimePipe,\n    MatVideoComponent,\n    MatSliderProgressBarComponent,\n    MatPlayButtonComponent,\n    MatVolumeControlComponent,\n    MatDownloadButtonComponent,\n    MatFullscreenButtonComponent,\n    MatTimeControlComponent,\n    MatQualityControlComponent,\n    MatVideoSpinnerComponent,\n    MatSeekProgressControlComponent,\n    MatVideoSourceDirective,\n    MatVideoTrackDirective,\n    MatFrameByFrameControlComponent\n  ],\n  imports: [CommonModule, MatIconModule, MatButtonModule, MatSliderModule],\n  exports: [MatVideoComponent, MatVideoSourceDirective, MatVideoTrackDirective],\n  providers: [FullscreenService, EventService]\n})\nexport class MatVideoModule {}\n"],"names":[],"mappings":"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"}